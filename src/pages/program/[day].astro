---
import Layout from "../../layouts/Layout.astro";
import type { TimeRecord } from "../../models/airtable";
import { getData } from "../../util/fetchUtil";
import { groupBy } from "../../util/groupUtil";

import format from "date-fns/format/index.js";
import en from "date-fns/locale/en-GB/index.js";

import { formatDate } from "../../util/localeUtil";

import { firstLetterUppercase } from "../../util/util";

import DayHeader from "../../components/DayHeader.astro";
import ProgramListFlex from "../../components/ProgramListFlex.astro";

import { csv } from "../../json/changes-18-10-2022";
<<<<<<< HEAD
=======
import Diff from "diff";
>>>>>>> 2fc3725a1c160617abaf78759a62691d3808f886
import { marked } from "marked";

export interface Props {
  date: string;
  relevantSlots: TimeRecord[];
  previousDate?: string;
  nextDate?: string;
}

export async function getStaticPaths() {
  const data = await getData();

  const dayData = groupBy(data, (v) => v.fields.date);
  const dayKeys = Object.keys(dayData);

  return dayKeys.map((date, index) => {
    const timeSlots = dayData[date];
    return {
      params: {
        day: format(new Date(date), "EEEE", { locale: en }).toLowerCase(),
      },
      props: {
        date: date,
        relevantSlots: timeSlots,
        previousDate: dayKeys[index - 1],
        nextDate: dayKeys[index + 1],
      },
    };
  });
}
const changes = csv
  .split("\n")
  .filter((value, index) => index !== 0)
  .map((value) =>
    value
      .split(";")
      .map((value) => value.split("-").map((value) => value.trim()))
  );
<<<<<<< HEAD
=======
console.log(changes[1]);
console.log(
  Diff.diffArrays(changes[1][1], changes[1][2]).filter(
    (value) => value.removed != null || value.added != null
  )
);
>>>>>>> 2fc3725a1c160617abaf78759a62691d3808f886

const { relevantSlots, date, previousDate, nextDate } = Astro.props;
---

<Layout
  title={firstLetterUppercase(formatDate(date, "EEEE")) +
    " - Knowit Fagseminar Roma"}
  currentPage="Program"
>
  <main class="w-full h-full">
    <div class="pb-4 lg:pt-10">
      <DayHeader date={date} nextDate={nextDate} previousDate={previousDate} />
    </div>

    <details class="mx-auto w-fit my-4 block">
      <summary class="mx-auto w-fit text-sm italic"
        >Endringer i programmet</summary
      >
      <div class="overflow-y-scroll max-h-60 border">
        <h3 class="font-bold">Endringer 18/10/2022</h3>
        <table class="border text-sm">
          <thead class="sitcky top-0"
            ><tr class="font-bold"
              ><th>Navn</th><th>FÃ¸r Endring</th><th>Etter Endring</th>
            </tr>
          </thead>
          <tbody>
            {
              changes.map((change) => {
                return (
                  <tr>
                    <td class="italics">{change[0]}</td>
                    <td>{change[1].join(" - ")}</td>
                    <td set:html={marked.parse(change[2].join(" - "))} />
                  </tr>
                );
              })
            }
          </tbody>
        </table>
      </div>
    </details>

    <div class="relative">
      <ProgramListFlex relevantSlots={relevantSlots} />
    </div>
    <div class="md:mt-2">
      <DayHeader date={date} nextDate={nextDate} previousDate={previousDate} />
    </div>
  </main>
</Layout>

<style>
  table,
  th,
  td {
    @apply border;
  }
</style>
